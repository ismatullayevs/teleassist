services:
  prestart:
    build: backend
    depends_on:
      db:
        condition: service_healthy
        restart: true
    env_file:
      - .env
    command: sh prestart.sh

  backend:
    build: ./backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
        restart: true
      prestart:
        condition: service_completed_successfully
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.http.services.api.loadbalancer.server.port=80
      - traefik.http.middlewares.admin-auth.basicauth.users=${ADMIN_USER}:${ADMIN_PASSWORD}

      - traefik.http.routers.api-admin.rule=Host(`api.${DOMAIN}`) && PathPrefix(`/admin`)
      - traefik.http.routers.api-admin.entrypoints=http
      - traefik.http.routers.api-admin.middlewares=https-redirect
      - traefik.http.routers.api-admin.middlewares=admin-auth

      - traefik.http.routers.api-admin-https.rule=Host(`api.${DOMAIN}`) && PathPrefix(`/admin`)
      - traefik.http.routers.api-admin-https.entrypoints=https
      - traefik.http.routers.api-admin-https.middlewares=admin-auth,compress
      - traefik.http.routers.api-admin-https.tls=true
      - traefik.http.routers.api-admin-https.tls.certresolver=le

      - traefik.http.routers.api.rule=Host(`api.${DOMAIN}`)
      - traefik.http.routers.api.entrypoints=http
      - traefik.http.routers.api-https.rule=Host(`api.${DOMAIN}`)
      - traefik.http.routers.api-https.entrypoints=https
      - traefik.http.routers.api-https.tls=true
      - traefik.http.routers.api-https.tls.certresolver=le
      - traefik.http.routers.api-https.middlewares=compress

      - traefik.http.routers.api.middlewares=https-redirect

  bot:
    build: ./bot
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
        restart: true
    env_file:
      - .env

  db:
    image: postgres:latest
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - .env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  mongo:
    image: mongo:latest
    volumes:
      - mongo_data:/data/db
    env_file:
      - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ADMIN}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  traefik:
    image: traefik:v3.4
    restart: always
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certificates:/certificates
    labels:
      - traefik.enable=true
      - traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080
      - traefik.http.routers.traefik-dashboard-http.entrypoints=http
      - traefik.http.routers.traefik-dashboard-http.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.traefik-dashboard-https.entrypoints=https
      - traefik.http.routers.traefik-dashboard-https.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.traefik-dashboard-https.tls=true
      - traefik.http.routers.traefik-dashboard-https.tls.certresolver=le
      - traefik.http.routers.traefik-dashboard-http.service=api@internal
      - traefik.http.routers.traefik-dashboard-https.service=api@internal
      - traefik.http.middlewares.admin-auth.basicauth.users=${ADMIN_USER}:${ADMIN_PASSWORD}
      - traefik.http.routers.traefik-dashboard-http.middlewares=admin-auth
      - traefik.http.routers.traefik-dashboard-https.middlewares=admin-auth
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.http.routers.traefik-dashboard-http.middlewares=https-redirect
      - traefik.http.middlewares.compress.compress=true
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--certificatesresolvers.le.acme.email=${EMAIL?Variable not set}"
      - "--certificatesresolvers.le.acme.storage=/certificates/acme.json"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--accesslog"
      - "--log"
      - "--api"

volumes:
  db_data:
  mongo_data:
  traefik-certificates: