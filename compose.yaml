services:
  prestart:
    build: backend
    depends_on:
      db:
        condition: service_healthy
        restart: true
    env_file:
      - .env
    command: sh prestart.sh

  backend:
    build: ./backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
        restart: true
      prestart:
        condition: service_completed_successfully
    env_file:
      - .env

  bot:
    build: ./bot
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
        restart: true
    env_file:
      - .env

  db:
    image: postgres:latest
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - .env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  mongo:
    image: mongo:latest
    volumes:
      - mongo_data:/data/db
    env_file:
      - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ADMIN}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

volumes:
  db_data:
  mongo_data: